# base-image for node on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
# Note the node:slim image doesn't have node-gyp
FROM resin/%%RESIN_MACHINE_NAME%%-alpine-node:6-slim

# Defines our working directory in container
RUN mkdir -p /usr/src/app/
WORKDIR /usr/src/app

# Install node modules, including i2c-bus without carrying all the deps in the layers
RUN apk add --no-cache make gcc g++ python && \
  JOBS=MAX npm install -g node-red node-red-contrib-resinio --production --silent && \
  apk del make gcc g++ && \
  npm cache clean --force && rm -rf /tmp/*

# Setup SSH Server
RUN apk add --no-cache --update openssh-server openssh-sftp-server && \
  mkdir /var/run/sshd && \
  echo 'root:resin' | chpasswd && \
  sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
  rc-update add sshd

# Support for timezone
RUN apk add --no-cache --update tzdata

# Install packages for PiOLED and BME680
RUN apk add --no-cache --update \
  --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ \
  build-base \
  i2c-tools \
  python2 \
  python2-dev \
  py2-pip \
  py-smbus \
  py-pillow && \
  pip install --upgrade pip && \
  pip install spidev RPi.GPIO w1thermsensor bme680 && \
  apk del build-base && \
  rm -rf /tmp/*

# This will copy all files in our root to the working directory in the container
COPY ./app ./

# Install PiOLED Python library
RUN cd /usr/src/app/Adafruit_Python_SSD1306 && \
  python setup.py install && \
  rm -r /usr/src/app/Adafruit_Python_SSD1306 && \
  rm -rf /tmp/*

# Enable systemd init system in container
ENV INITSYSTEM=on

# server.js will run when container starts up on the device
CMD ["bash", "/usr/src/app/start.sh"]
